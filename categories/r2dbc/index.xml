<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>r2dbc on Jelili O. Adesina</title><link>https://jelilio.github.io/categories/r2dbc/</link><description>Recent content in r2dbc on Jelili O. Adesina</description><image><title>Jelili O. Adesina</title><url>https://jelilio.github.io/images/papermod-cover.png</url><link>https://jelilio.github.io/images/papermod-cover.png</link></image><generator>Hugo -- 0.119.0</generator><language>en-us</language><lastBuildDate>Tue, 12 Nov 2024 12:00:22 +0000</lastBuildDate><atom:link href="https://jelilio.github.io/categories/r2dbc/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing Soft Delete in Spring Webflux with R2DBC</title><link>https://jelilio.github.io/posts/soft-delete-spring-webflux-r2dbc/</link><pubDate>Tue, 12 Nov 2024 12:00:22 +0000</pubDate><guid>https://jelilio.github.io/posts/soft-delete-spring-webflux-r2dbc/</guid><description>Overview Data management is a fundamental component in software development, especially when handling records that need removal from active use. Instead of permanently deleting records (a method known as “hard delete”), many applications use a technique called “soft delete.” The “soft delete” approach is a widely used solution that marks records as inactive without permanently removing them, enabling easy data recovery and historical tracking.
Currently, unlike Spring Data JPA and Hibernate, Spring Data R2DBC does not offer built-in annotations for automatically handling soft-delete.</description></item></channel></rss>